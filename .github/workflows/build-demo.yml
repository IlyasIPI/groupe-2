name: CI/CD

on:
  push:
    branches: ['main']

jobs:
  chocolat_lint:
    name: Lint python code
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
    - uses: actions/checkout@v4
    - name: Python Linter
      uses: sunnysid3up/python-linter@master
      with:
        source: "docker/app"
        mypy-options: "--ignore-missing-imports --show-error-codes"
        pylint-options: "--rcfile=setup.cfg"
        isort-options: "-w 100"
  lint_docker:
    name: Lint docker file code
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
      attestations: write
      id-token: write
    steps:
    - uses: actions/checkout@v4
    - uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: docker/Dockerfile
  build_and_test:
    name: Build and Test Docker image
    runs-on: ubuntu-latest
    needs: [chocolat_lint, lint_docker]  # DÃ©pendance sur les jobs de linting

    steps:
      # Checkout code
      - name: Check out the repository
        uses: actions/checkout@v4

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t my-librairie-image .

      # Run the Docker container
      - name: Run Docker container
        run: |
          docker run -d -p 5000:5000 my-librairie-image

      # Test the Docker container by creating a new book
      - name: Test create book API
        run: |
          sleep 5  # Wait for the server to start
          curl --header "Content-Type: application/json" \
            --request POST \
            --data '{"titre": "DevSecOps DEAVSETS", "auteur": "Groupe 2"}' \
            http://localhost:5000/librairie/livres

      # Optionally stop the container after testing
      - name: Stop Docker container
        run: |
          docker ps -q | xargs docker stop

  push_to_registries:
    name: Push Docker image to single registry
    runs-on: ubuntu-latest
    needs: [chocolat_lint, lint_docker]
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: harbor.kakor.ovh
          username: ipi
          password: ${{ secrets.password_harbor }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: harbor.kakor.ovh/ipi/groupe-ipi-2
          tags: type=sha

      - name: Build and push Docker images
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./docker/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
